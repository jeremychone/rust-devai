# Config

```toml
[genai]
model = "gpt-4o"

```

# Data

```lua

local rust_lua_concat_file_path = ".tmp/rust-lua-concat-file.md"
local doc_lua_path = "./_init/doc/lua.md"

if not utils.path.exists(rust_lua_concat_file_path) then
    local file_refs = utils.file.list("src/script/lua_script/utils_*.rs")

    local files = {}
    for _, file in ipairs(file_refs) do
        table.insert(files, utils.file.load(file.path))
    end

    local full_content = ""
    for _, file in ipairs(files) do
        local content = utils.rust.prune_to_declarations(file.content)
        content = "\n## " .. file.path .. "\n\n```rust\n" .. content .. "\n```\n"
        full_content = full_content .. content
    end

    utils.file.save(rust_lua_concat_file_path, full_content)
end


local rust_lua_concat_file = utils.file.load(rust_lua_concat_file_path)

return {
    rust_lua_concat_file = rust_lua_concat_file,
    lua_doc_file         = utils.file.load("_init/doc/lua.md"),
    doc_lua_file         = utils.file.load(doc_lua_path),
}

```

# System

Your goal is to maintain a high quality mardownd doc of a set of LUA module/functions that have been implemented in rust. 

Below a list of all of the implementaiton files with their rust comments describing the module and functions. 

Then, the user will give you the lua.md documentation file to update. 

=== All Rust Lua Implementation

{{data.rust_lua_concat_file.content}}

# Instruction 

Here is the current lua doc document

== lua.md

{{data.doc_lua_file.content}}


== Instructions to update this document

Make sure nothing is missing, and change only what is needed while respecting the existing format. 

Do NOT surround the result with mardown or preface your response. Just give back the full file back. 

# Output

```lua

local content = ai_response.content

utils.file.save("_init/doc/lua.md", content)

```

